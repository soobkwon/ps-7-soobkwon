{"version":3,"sources":["Projects.js","About.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["Projects","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","inherits","createClass","key","value","_this2","d3","then","console","log","setState","react_default","a","createElement","className","map","d","i","reactstrap_es","sm","class","name","date","classID","description","team","tools","Component","About","Homepage","apply","arguments","App","HashRouter","Link","to","id","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffe46d29.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Card, CardBody, CardText, Col } from 'reactstrap';\n\nexport class Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n    componentDidMount() {\n        d3.csv('data/projects.csv').then(data => {\n            console.log(data)\n            this.setState({\n                data: data\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h4>Projects</h4>\n                {this.state.data.map((d, i) => {\n                    return <Col sm=\"15\" key={\"project\" + i}>\n                        <Card>\n                            <CardBody>\n                                <h5 class = \"card-title\">\n                                    {d.name} ( {d.date} ) \n                                </h5>\n                                <h6 class=\"card-subtitle\">\n                                    {d.classID + \" - \" + d.className}\n                                </h6>\n                                <CardText>\n                                    {d.description}\n                                    <br />\n                                    {d.team}\n                                    <br />\n                                    Tools Used: {d.tools}\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                        <br />\n                    </Col>\n\n                })}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nexport class About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        d3.csv('data/courses.csv').then(data => {\n            this.setState({\n                data: data\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h4>Skills and Familiarities</h4>\n                    <div className=\"container\">\n                        <h5>Languages and Frameworks</h5>\n                        <ul>\n                            <li>CSS</li>\n                            <li>Git</li>\n                            <li>HTML</li>\n                            <li>Java</li>\n                            <li>JavaScript</li>\n                            <li>JQuery</li>\n                            <li>Python</li>\n                            <li>R</li>\n                            <li>React</li>\n                            <li>React Router</li>\n                            <li>SQL</li>\n                        </ul>\n                    </div>\n                    <div className=\"container\">\n                        <h5>Tools</h5>\n                        <ul>\n                            <li>Adobe Illustrator</li>\n                            <li>Adobe Photoshop</li>\n                            <li>Adobe XD</li>\n                            <li>Canopy</li>\n                            <li>Eclipse</li>\n                            <li>Microsoft Office</li>\n                            <li>RazorSQL/Microsoft SQL Server</li>\n                            <li>Visual Studio Code</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport class Homepage extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Welcome!</h1>\n                <p>My name is Soobin Kwon and I am a senior at the University of Washington in Seattle.\n                    I will be obstaining a Bachelors of Science in Informatics in June 2019 with an HCI degree track.\n                    I would like to become a Software Developer after college and am currently in the search for a job.</p>\n\n                <p>I have a great work ethic with a passion to learn and challenge myself.\n                    I have taken many different courses at the University of Washington that involves different levels of rigor and coding experiences.</p>\n\n                <p>An interesting fact about me is that I love puppies especially corgis!</p>\n            </div>\n\n\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Projects } from './Projects';\nimport { About } from './About';\nimport { Homepage } from './Homepage';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n              <div className=\"container\">\n                <Link to=\"/\" id='link'>Home</Link>\n                { ' ' }\n                <Link to=\"/about\" id='link'>About</Link>\n                { ' ' }\n                <Link to=\"/projects\" id='link'>Projects</Link>\n\n                <Route exact path=\"/\" component={ Homepage } />\n                <Route path=\"/projects\" component={ Projects } />\n                <Route path=\"/about\" component={ About } />\n              </div>\n            </Router>\n            );\n    }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}